/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&soft_off {
    hold-time-ms = <2000>; // Only turn off it the key is held for 2 seconds or longer.
};

/ {
    combos {
        compatible = "zmk,combos";

        QFTILDE {
            bindings = <&kp GRAVE>;
            key-positions = <1 3>;
        };

        TAB_BACK {
            bindings = <&kp LS(TAB)>;
            key-positions = <25 26>;
        };

        CAPSWORD {
            bindings = <&caps_word>;
            key-positions = <37 39>;
        };

        BKSLH {
            bindings = <&kp BACKSLASH>;
            key-positions = <10 9>;
        };
    };

    macros {
        SQBK: SQBK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "SQBK";
        };

        CLBK: CLBK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "CLBK";
        };

        GRCO: GRCO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp DOUBLE_QUOTES &kp GRAVE>;
            label = "GRCO";
        };
    };

    behaviors {
        hrl: hrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            hold-trigger-key-positions = <6 7 8 9 10 11 23 22 21 20 18 19 30 31 32 33 34 35 39 36 37 38 40>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <75>;
            hold-trigger-on-release;
        };

        hrr: hrr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <1000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <75>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <4 5 12 13 14 15 16 17 24 25 26 27 28 29 3 2 0 1 40 39 38 37 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Text-Layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp ESCAPE        &kp Q        &kp W        &kp F         &kp P             &kp B               &kp J  &kp L                 &kp U         &kp Y        &kp SEMICOLON  &kp BSPC
&kp TAB           &hrl LGUI A  &hrl LALT R  &hrl LSHFT S  &hrl LCTRL T      &kp G               &kp M  &hrr RCTRL N          &hrr RSHFT E  &hrr RALT I  &hrr RGUI O    &kp SQT
&kp LEFT_BRACKET  &kp Z        &kp X        &kp C         &kp D             &kp V               &kp K  &kp H                 &kp COMMA     &kp DOT      &kp FSLH       &kp RIGHT_BRACKET
                                            &lt 1 DELETE  &hrl LSHFT SPACE         &lt 2 ENTER         &hrr RSHFT BACKSPACE  &lt 3 INS
            >;
        };

        Nav-Layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&trans  &kp RC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)            &kp C_VOLUME_UP    &kp RC(RSHFT)  &kp PRINTSCREEN  &kp INSERT  &trans     &trans
&trans  &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &kp TAB              &kp K_MUTE         &sk RCTRL      &sk RSHFT        &sk RALT    &sk RGUI   &trans
&trans  &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &kp RS(TAB)          &kp C_VOLUME_DOWN  &kp END        &kp PG_UP        &kp PG_DN   &kp PSCRN  &trans
                              &trans     &trans                  &trans                     &trans         &trans
            >;
        };

        NumSym-Layer {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&trans  &kp EQUAL     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS             &kp PIPE        &kp AMPS  &kp ASTRK  &kp LPAR   &kp RPAR  &trans
&trans  &kp SLASH     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS              &kp UNDERSCORE  &kp DLLR  &kp PRCNT  &kp CARET  &GRCO     &trans
&trans  &kp ASTERISK  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER          &SQBK           &kp EXCL  &kp AT     &kp HASH   &CLBK     &trans
                                       &kp DOT          &kp KP_NUMBER_0                &trans                  &trans    &trans
            >;
        };

        Func-Layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&trans     &kp F12  &kp F7  &kp F8  &kp F9  &trans          &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans     &kp F11  &kp F4  &kp F5  &kp F6  &none           &none           &sk RCTRL     &sk RSHFT     &sk RALT      &sk RGUI      &none
&soft_off  &kp F10  &kp F1  &kp F2  &kp F3  &none           &kp KP_NUMLOCK  &none         &none         &none         &none         &sys_reset
                            &trans  &trans          &trans                  &trans        &trans
            >;
        };

        Lighting-Layer {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans          &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans
&trans  &sk LGUI  &sk LALT  &sk LSHFT  &sk LCTRL  &trans          &trans           &rgb_ug RGB_TOG  &trans           &trans           &trans           &trans
&trans  &trans    &trans    &trans     &trans     &trans          &rgb_ug RGB_EFR  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans
                            &trans     &trans             &trans                   &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Lighting {
            if-layers = <1 3>;
            then-layer = <4>;
        };
    };
};
