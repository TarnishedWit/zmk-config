/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&soft_off {
    hold-time-ms = <2000>; // Only turn off it the key is held for 2 seconds or longer.
};

/ {
    combos {
        compatible = "zmk,combos";

        QFTILDE {
            bindings = <&kp GRAVE>;
            key-positions = <0 2>;
        };

        TAB_BACK {
            bindings = <&kp LS(TAB)>;
            key-positions = <20 21>;
        };

        CAPSWORD {
            bindings = <&caps_word>;
            key-positions = <34 31>;
            timeout-ms = <0>;
        };

        BKSLH {
            bindings = <&kp BACKSLASH>;
            key-positions = <9 8>;
        };

        corner_esc {
            bindings = <&gresc>;
            key-positions = <0 1>;
        };

        lower_del {
            bindings = <&kp DEL>;
            key-positions = <21 23>;
        };

        cm_zero {
            bindings = <&kp N0>;
            key-positions = <22 23>;
        };

        cm_dot {
            bindings = <&kp PERIOD>;
            key-positions = <21 22>;
        };
    };

    macros {
        SQBK: SQBK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT>;
            label = "SQBK";
        };

        CLBK: CLBK {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RIGHT_BRACE &kp LEFT>;
            label = "CLBK";
        };

        GRCO: GRCO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp DOUBLE_QUOTES &kp GRAVE>;
            label = "GRCO";
        };
    };

    behaviors {
        hrl: hrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HRL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            hold-trigger-key-positions = <6 7 8 9 18 19 36 5 5 9 15 16 17 18 19 25 26 27 28 29 33 34 35 32 31 30>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <75>;
            hold-trigger-on-release;
        };

        hrr: hrr {
            compatible = "zmk,behavior-hold-tap";
            label = "HRR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <75>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <4 12 13 14 24 3 2 0 1 36 10 11 20 21 22 23 30 31 32 33 34 35>;
        };

        qte_semi: qte_semi {
            compatible = "zmk,behavior-tap-dance";
            label = "QTE_SEMI";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp SEMICOLON>;

            tapping-term-ms = <175>;
        };

        left_outer: left_outer {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_OUTER";
            #binding-cells = <0>;
            bindings = <&lt 2 DELETE>, <&kp LEFT_BRACKET>;

            tapping-term-ms = <175>;
        };

        right_outer: right_outer {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_OUTER";
            #binding-cells = <0>;
            tapping-term-ms = <175>;
            bindings = <&lt 2 INS>, <&kp RIGHT_BRACKET>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak-Layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp Q  &kp W  &kp F  &kp P  &kp B  &kp J  &kp L  &kp U  &kp Y  &qte_semi  &hrl LGUI A  &hrl LALT R  &hrl LSHFT S  &hrl LCTRL T  &kp G  &kp M  &hrr RCTRL N  &hrr RSHFT E  &hrr RALT I  &hrr RGUI O  &kp Z  &kp X  &kp C  &kp D  &kp V  &kp K  &kp H  &kp COMMA  &kp DOT  &kp FSLH  &left_outer  &hrl LSHFT SPACE  &lt 3 ENTER  &lt 3 ENTER  &hrr RSHFT BACKSPACE  &right_outer
            >;
        };

        Canary-Layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BKSP    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp W  &kp L  &kp Y  &kp P  &kp B  &kp Z  &kp F  &kp O  &kp U  &qte_semi  &hrl LGUI C  &hrl LALT R  &hrl LSHFT S  &hrl LCTRL T  &kp G  &kp M  &hrr RCTRL N  &hrr RSHFT E  &hrr RALT I  &hrr RGUI A  &kp Q  &kp J  &kp V  &kp D  &kp K  &kp X  &kp H  &kp SLASH  &kp COMMA  &kp PERIOD  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        Nav-Layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&kp RC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)  &kp C_VOLUME_UP  &mkp MB1  &mkp MB3  &mkp MB2  &studio_unlock  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp TAB  &kp K_MUTE  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END  &kp RS(TAB)  &kp C_VOLUME_DOWN  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        NumSym-Layer {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BKSP |    |     |

            bindings = <
&kp EQUAL  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS  &kp PIPE  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp SLASH  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS  &kp UNDERSCORE  &kp DLLR  &kp PRCNT  &kp CARET  &GRCO  &kp ASTERISK  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT  &SQBK  &kp EXCL  &kp AT  &kp HASH  &CLBK  &kp DOT  &kp KP_NUMBER_0  &trans  &trans  &trans  &trans
            >;
        };

        Func-Layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp F11  &kp F4  &kp F5  &kp F6  &none  &bt BT_CLR  &sk RCTRL  &sk RSHFT  &sk RALT  &sk RGUI  &kp F10  &kp F1  &kp F2  &kp F3  &none  &kp KP_NUMLOCK  &none  &none  &none  &sys_reset  &trans  &trans  &soft_off  &trans  &trans  &trans
            >;
        };
    };
};
